//| mill-version: 1.0.5

package build

import mill.*
import mill.scalalib.*
import mill.scalalib.publish.*
import mill.scalalib.scalafmt.*

object Dependencies {
  val scalaVersion = "2.13.16"

  val chiselVersion = "7.0.0"
  val chisel        = mvn"org.chipsalliance::chisel:$chiselVersion"
  val chiselPlugin  = mvn"org.chipsalliance:::chisel-plugin:$chiselVersion"

  val scalaTest = mvn"org.scalatest::scalatest:3.2.19"
}

trait ChiselCircuitsModule extends ScalaModule with ScalafmtModule {
  override def scalaVersion = Dependencies.scalaVersion

  override def scalacOptions = super.scalacOptions() ++ Seq(
    "-deprecation",          // Emit warning and location for usages of deprecated APIs.
    "-explaintypes",         // Explain type errors in more detail.
    "-Werror",               // Fail the compilation if there are any warnings.
    "-feature",              // Emit warning and location for usages of features that should be imported explicitly.
    "-Xcheckinit",           // Wrap field accessors to throw an exception on uninitialized access.
    "-language:higherKinds", // Allow higher-kinded types
    "-language:implicitConversions", // Allow definition of implicit functions called views
    "-language:reflectiveCalls",     // Allow reflective access to members of structural types
    "-unchecked",                    // Enable additional warnings where generated code depends on assumptions.

    "-Xlint:_,-delayedinit-select", // Suppress DelayedInit warnings because it is still used by StateMachine.
    "-Wdead-code",                  // Warn when dead code is identified.
    "-Wextra-implicit",             // Warn when more than one implicit parameter section is defined.
    "-Wmacros:both",                // Lints code before and after applying a macro
    "-Wnumeric-widen",              // Warn when numerics are widened.
    "-Woctal-literal",              // Warn on obsolete octal syntax.
    "-Wunused:_",                   // Warn when imports, local and private vals, vars, defs, and types are unused.

    "-Ybackend-parallelism",
    Math
      .min(Runtime.getRuntime.availableProcessors(), 8)
      .toString,                                 // Enable parallelization â€” change to desired number!
    "-Ycache-plugin-class-loader:last-modified", // Enables caching of classloaders for compiler plugins
    "-Ycache-macro-class-loader:last-modified"   // and macro definitions. This can lead to performance improvements.
  )

  override def mvnDeps             = Seq(Dependencies.chisel)
  override def scalacPluginMvnDeps = Seq(Dependencies.chiselPlugin)

  object test extends ScalaTests with TestModule.ScalaTest {
    override def mvnDeps = super.mvnDeps() ++ Seq(Dependencies.scalaTest)
  }
}

object chipmunk extends ChiselCircuitsModule with PublishModule {
  def publishVersion = "0.1-SNAPSHOT"

  def pomSettings = PomSettings(
    description = "CHIPMUNK: Enhance CHISEL for Smooth and Comfortable Chip Design",
    organization = "com.zhutmost",
    url = "https://github.com/zhutmost/chipmunk",
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github("zhutmost", "chipmunk"),
    developers = Seq(Developer("zhutmost", "Haozhe Zhu", "https://github.com/zhutmost"))
  )
}

object mylib extends ChiselCircuitsModule {
  override def moduleDeps: Seq[ScalaModule] = Seq(chipmunk)
}
